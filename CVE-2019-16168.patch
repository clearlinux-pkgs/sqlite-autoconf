From 64f084970863415159ec081ac9be77d21757ac27 Mon Sep 17 00:00:00 2001
From: drh <drh@noemail.net>
Date: Fri, 13 Sep 2019 14:41:42 -0700
Subject: [PATCH] Ensure that the optional "sz=N" parameter that can be manually added...

...to the end of an sqlite_stat1 entry does not have an N value that is too small.

Ticket [e4598ecbdd18bd82]

FossilOrigin-Name: 98357d8c1263920b33a3648ef9214a63c99728bafa7a8d3dd6a1241b2303fd42
---
 sqlite3.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/sqlite3.c b/sqlite3.c
index 61bfdeb..b3e6ae2 100644
--- a/sqlite3.c
+++ b/sqlite3.c
@@ -105933,7 +105933,9 @@ static void decodeIntArray(
       if( sqlite3_strglob("unordered*", z)==0 ){
         pIndex->bUnordered = 1;
       }else if( sqlite3_strglob("sz=[0-9]*", z)==0 ){
-        pIndex->szIdxRow = sqlite3LogEst(sqlite3Atoi(z+3));
+        int sz = sqlite3Atoi(z+3);
+        if( sz<2 ) sz = 2;
+        pIndex->szIdxRow = sqlite3LogEst(sz);
       }else if( sqlite3_strglob("noskipscan*", z)==0 ){
         pIndex->noSkipScan = 1;
       }
@@ -143260,6 +143262,7 @@ static int whereLoopAddBtreeIndex(
     ** it to pNew->rRun, which is currently set to the cost of the index
     ** seek only. Then, if this is a non-covering index, add the cost of
     ** visiting the rows in the main table.  */
+    assert( pSrc->pTab->szTabRow>0 );
     rCostIdx = pNew->nOut + 1 + (15*pProbe->szIdxRow)/pSrc->pTab->szTabRow;
     pNew->rRun = sqlite3LogEstAdd(rLogSize, rCostIdx);
     if( (pNew->wsFlags & (WHERE_IDX_ONLY|WHERE_IPK))==0 ){
-- 
2.23.0

